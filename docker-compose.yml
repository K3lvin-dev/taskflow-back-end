services:
  # Serviço do NGINX como Proxy Reverso e Servidor Web
  nginx:
    image: nginx:1.27-alpine
    container_name: taskflow_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Mapeia os arquivos de configuração do NGINX e os certificados
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - api # Garante que a API esteja pronta antes do NGINX iniciar
    networks:
      - taskflow-net

  # Serviço do Certbot para renovação automática de certificados SSL
  certbot:
    image: certbot/certbot
    container_name: taskflow_certbot
    restart: always
    # Comando para verificar a renovação a cada 12 horas
    command: sh -c "trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - nginx # Garante que o NGINX esteja rodando para o processo de renovação
    networks:
      - taskflow-net

  # Serviço da API .NET (TaskFlowAPI)
  api:
    container_name: taskflow_api
    image: ghcr.io/k3lvin-dev/taskflow-api:main
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=${DB_CONNECTION_STRING}
      - Redis__Configuration=redis:6379
    networks:
      - taskflow-net
   
  # Serviço do Banco de Dados PostgreSQL
  postgres:
    image: postgres:14-alpine
    container_name: taskflow_postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - taskflow-net

  # Serviço de Cache com Redis
  redis:
    image: redis:7-alpine
    container_name: taskflow_redis
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - taskflow-net

# Volumes para persistência de dados
volumes:
  postgres_data:
  redis_data:

# Rede customizada para a comunicação entre os serviços
networks:
  taskflow-net:
    driver: bridge