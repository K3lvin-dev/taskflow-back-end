services:
  # Serviço do NGINX como Proxy Reverso
  nginx:
    image: nginx:1.27-alpine
    container_name: taskflow_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    # ESTE COMANDO GARANTE QUE O NGINX SÓ INICIE APÓS O CERTIFICADO SER CRIADO
    command: /bin/sh -c 'while ! [ -f /etc/letsencrypt/live/app.taskflow.vps-kinghost.net/fullchain.pem ]; do sleep 1; done; nginx -g "daemon off;"'
    depends_on:
      - api
    networks:
      - taskflow-net

  # Serviço do Certbot que CRIA e RENOVA os certificados
  certbot:
    image: certbot/certbot
    container_name: taskflow_certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    # A SINTAXE CORRETA DO COMANDO QUE CRIA E DEPOIS RENOVA
    command: >
      sh -c "
        certbot certonly --webroot -w /var/www/certbot --non-interactive --agree-tos -m kelvingabriel70@hotmail.com -d app.taskflow.vps-kinghost.net --rsa-key-size 4096 || true;
        while :; do certbot renew --quiet; sleep 12h & wait $${!}; done;
      "
    # Certbot precisa que o NGINX esteja pronto para servir o desafio
    depends_on:
      - nginx
    networks:
      - taskflow-net

  # Serviço da API .NET
  api:
    container_name: taskflow_api
    image: ghcr.io/k3lvin-dev/taskflow-api:main
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=${DB_CONNECTION_STRING}
      - Redis__Configuration=redis:6379
    networks:
      - taskflow-net
   
  # Serviço do Banco de Dados PostgreSQL
  postgres:
    image: postgres:14-alpine
    container_name: taskflow_postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - taskflow-net

  # Serviço de Cache com Redis
  redis:
    image: redis:7-alpine
    container_name: taskflow_redis
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - taskflow-net

volumes:
  postgres_data:
  redis_data:

networks:
  taskflow-net:
    driver: bridge