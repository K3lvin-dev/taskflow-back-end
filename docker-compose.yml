services:
  # --- NGINX PROXY REVERSO (sempre ativo) ---
  nginx:
    image: nginx:1.27-alpine
    container_name: taskflow_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd:ro
      - ./data/certbot/conf:/etc/letsencrypt:ro
      - ./data/certbot/www:/var/www/certbot:ro
    networks:
      - taskflow-net

  # --- Serviços de produção (PRD) ---
  api_prd:
    container_name: taskflow_api_prd
    image: ghcr.io/k3lvin-dev/taskflow-api:latest
    restart: always
    profiles: ["prd"] # Ativado apenas com --profile prd
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=${DB_CONNECTION_STRING}
      - Redis__Configuration=redis_prd:6379
    networks:
      - taskflow-net

  postgres_prd:
    image: postgres:14-alpine
    container_name: taskflow_postgres_prd
    restart: always
    profiles: ["prd"]
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data_prd:/var/lib/postgresql/data
    networks:
      - taskflow-net

  redis_prd:
    image: redis:7-alpine
    container_name: taskflow_redis_prd
    restart: always
    profiles: ["prd"]
    volumes:
      - redis_data_prd:/data
    networks:
      - taskflow-net

  # --- Serviços de desenvolvimento (DEV) ---
  api_dev:
    container_name: taskflow_api_dev
    image: ghcr.io/k3lvin-dev/taskflow-api:dev
    restart: always
    profiles: ["dev"] # Ativado apenas com --profile dev
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=${DB_CONNECTION_STRING}
      - Redis__Configuration=redis_dev:6379
    networks:
      - taskflow-net

  postgres_dev:
    image: postgres:14-alpine
    container_name: taskflow_postgres_dev
    restart: always
    profiles: ["dev"]
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - taskflow-net

  redis_dev:
    image: redis:7-alpine
    container_name: taskflow_redis_dev
    restart: always
    profiles: ["dev"]
    volumes:
      - redis_data_dev:/data
    networks:
      - taskflow-net

  # --- STACK DE OBSERVABILIDADE (LOGS E MÉTRICAS) ---
  loki:
    image: grafana/loki:2.9.0
    container_name: taskflow_loki
    restart: always
    profiles: ["prd", "dev"]
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - taskflow-net

  promtail:
    image: grafana/promtail:2.9.0
    container_name: taskflow_promtail
    restart: always
    profiles: ["prd", "dev"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./loki/promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - taskflow-net

  grafana:
    image: grafana/grafana:10.0.0
    container_name: taskflow_grafana
    restart: always
    profiles: ["prd", "dev"]
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - taskflow-net

# --- Volumes para persistência de dados ---
volumes:
  postgres_data_prd:
  redis_data_prd:
  postgres_data_dev:
  redis_data_dev:
  grafana_data:

# --- Rede customizada para comunicação interna ---
networks:
  taskflow-net:
    driver: bridge