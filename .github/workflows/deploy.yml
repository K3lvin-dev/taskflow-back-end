name: CI/CD - Deploy TaskFlow API to VPS

on:
  push:
    branches: ["main"]

env:
  IMAGE_NAME: ghcr.io/k3lvin-dev/taskflow-api
  DOMAIN: app.taskflow.vps-kinghost.net
  EMAIL: kelvingabriel70@hotmail.com

jobs:
  # ---------------------------
  # Job 1: Build & Push Docker
  # ---------------------------
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest

  # ---------------------------
  # Job 2: Deploy na VPS
  # ---------------------------
  deploy:
    needs: build-and-push
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Atualizar arquivo .env
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - name: Logar no GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Criar diretórios para certificados
        run: |
          mkdir -p ./data/certbot/conf
          mkdir -p ./data/certbot/www

      - name: Parar containers existentes para liberar a porta 80
        run: docker compose down || echo "Nenhum container em execução para parar."

      - name: Gerar ou renovar certificado Let’s Encrypt (Staging)
        run: |
          docker run --rm \
            -p 80:80 \
            -v $(pwd)/data/certbot/conf:/etc/letsencrypt \
            -v $(pwd)/data/certbot/www:/var/www/certbot \
            certbot/certbot certonly \
            --standalone \
            --staging \
            -d ${{ env.DOMAIN }} \
            --email ${{ env.EMAIL }} \
            --agree-tos \
            --non-interactive \
            || echo "Certificado já existente ou renovado."

      - name: Deploy com Docker Compose
        run: |
          docker compose pull
          docker compose up -d --build
          docker image prune -af

