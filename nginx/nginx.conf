worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    access_log    /var/log/nginx/access.log;
    error_log     /var/log/nginx/error.log warn;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Cache para arquivos estáticos
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off;

    # ---------------------------
    # HTTP: redireciona para HTTPS
    # ---------------------------
    server {
        listen 80;
        server_name app.taskflow.vps-kinghost.net www.app.taskflow.vps-kinghost.net;

        # HTTP-01 challenge do Certbot
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redireciona tudo para HTTPS sem www
        location / {
            return 301 https://app.taskflow.vps-kinghost.net$request_uri;
        }
    }

    # ---------------------------
    # HTTPS principal
    # ---------------------------
    server {
        listen 443 ssl http2;
        server_name app.taskflow.vps-kinghost.net;

        ssl_certificate /etc/letsencrypt/live/app.taskflow.vps-kinghost.net/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/app.taskflow.vps-kinghost.net/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Cabeçalhos de segurança
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;

        # ---------------------------
        # Front-end (React/Node)
        # ---------------------------
        location / {
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";

            # Cache estático
            proxy_cache my_cache;
            proxy_cache_valid 200 1h;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        }

        # ---------------------------
        # API (Docker service 'api')
        # ---------------------------
        location /api/ {
            proxy_pass http://api:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";

            proxy_read_timeout 90s;
            proxy_send_timeout 90s;
        }

        # ---------------------------
        # Rotas estáticas
        # ---------------------------
        location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg|mp4|webm)$ {
            root /usr/share/nginx/html;
            access_log off;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
    }
}
