worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 2048;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    access_log    /var/log/nginx/access.log;
    error_log     /var/log/nginx/error.log warn;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout 65;

    # --- HTTP -> HTTPS (para todos os domínios) ---
    server {
        listen 80;
        server_name app.taskflow.vps-kinghost.net dev.taskflow.vps-kinghost.net monitor.taskflow.vps-kinghost.net;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # --- Servidor HTTPS - PRODUÇÃO (API + Front-End) ---
    server {
        listen 443 ssl;
        http2 on;       
        server_name app.taskflow.vps-kinghost.net;

        ssl_certificate /etc/letsencrypt/live/app.taskflow.vps-kinghost.net/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/app.taskflow.vps-kinghost.net/privkey.pem;
        
        http2 on;

        # Rota para a API (.NET Core)
        location /api/ {
            proxy_pass http://api_prd:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Suporte para WebSocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Rota para o Front-End (React)
        location / {
            proxy_pass http://web_prd:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # --- Servidor HTTPS - DESENVOLVIMENTO (API + Front-End) ---
    server {
        listen 443 ssl;
        http2 on;
        server_name dev.taskflow.vps-kinghost.net;

        ssl_certificate /etc/letsencrypt/live/app.taskflow.vps-kinghost.net/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/app.taskflow.vps-kinghost.net/privkey.pem;
        
        http2 on;

        # Rota para a API (.NET Core)
        location /api/ {
            proxy_pass http://api_dev:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Suporte para WebSocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Rota para o Front-End (React)
        location / {
            proxy_pass http://web_dev:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # --- Servidor HTTPS - MONITORAMENTO (GRAFANA) ---
    server {
        listen 443 ssl;
        http2 on;
        server_name monitor.taskflow.vps-kinghost.net;

        ssl_certificate /etc/letsencrypt/live/app.taskflow.vps-kinghost.net/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/app.taskflow.vps-kinghost.net/privkey.pem;
        
        http2 on;

        location / {
            auth_basic "Acesso Restrito ao Monitoramento";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://taskflow_grafana:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}